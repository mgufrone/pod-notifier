name: Build and Push Docker Image

on:
  workflow_run:
    workflows: [ "Bump Version and Update Release" ]
    types:
      - completed
  push:
    tags:
      - "*"

jobs:
  build-and-push:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-tags: 'true'
          fetch-depth: '1'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - name: Get latest tag
        id: tag
        run: |
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/pod-notifier:${{ env.TAG }}-${{ matrix.arch }}
            ghcr.io/${{ github.repository_owner }}/pod-notifier:${{ matrix.arch }}
          platforms: linux/${{ matrix.arch }}
  manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set TAG env
        run: echo "TAG=${{ needs.build-and-push.outputs.tag }}" >> $GITHUB_ENV
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Create and push multi-arch manifest for latest tag
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/pod-notifier:latest \
            --amend ghcr.io/${{ github.repository_owner }}/pod-notifier:latest-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/pod-notifier:latest-arm64
          
          docker manifest push ghcr.io/${{ github.repository_owner }}/pod-notifier:latest
